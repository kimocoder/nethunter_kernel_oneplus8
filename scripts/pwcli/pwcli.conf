#
# Example configuration file for pwcli.
#
# Copy this to .git/pwcli/config and edit to match your settings
#

[general]

# Patchwork server's main URL.
#
server-url = https://patchwork.example.com/

# Name of the patchwork project.
#
project = linux-wireless

# (Optional) Patchwork username. If not set, patches are not filtered
# based on user name and instead all patches from the project are
# shown.
#
#username = edward

# (Optional) Patchwork token which can be retrieved from your
# patchwork profile page, e.g. https://patchwork.example.com/user.
# Needed when changing patches in the server. No need to set this when
# just downloading patches from the server.
#
# Requires username also to be set.
#
#token = abcd123456789890

# (Optional) Command to open patch URL's from patchwork.
#
#browser = xdg-open

# (Optional) The command used to build the software after a patch is
# applied. If not set build testing is skipped.
#
#build-command = make -j 8

# (Optional) Send automatic emails ("thank you" or the reason comment
# when rejecting) after commiting or reviewing a patch to all address
# in TO and Cc fields. The reply command will send an email even if
# this setting is disabled.
#
# Valid options: false (default), true
#
#automatic-emails = true

# (Optional) When commiting a patch add a tag to the end of commit log
# with email's Message-id. This is to link the patch to the actual
# email containing the patch. Example:
#
#   Link: https://lore.kernel.org/r/1587495512-29813-1-git-send-email-mkenna@codeaurora.org
#
# Valid options: string with %s marking the location of actual msgid
#
#msgid-tag = Link: https://lore.kernel.org/r/%s

# (Optional) Enable pending mode which means that the review command
# applies the patch to a pending branch for more testing and editing.
# This makes it possible for easy to test and improve patches before
# they are applied. The commit command then cherry picks the patch
# from pending branch (instead of downloading the original from
# patchwork as is done normally).
#
# Requires pending-branch and main-branches to be set.
#
# Valid options: disabled (default), stgit
#
#pending-mode = stgit

# (Optional) The name of the pending branch review command applies
# patches to.
#
#pending-branch = pending

# (Optional) The name of the git branch(es) where the patch is
# commited when commit command is issued. Multiple branches are
# separated with a command and chosen with the branch command in pwcli
# shell. This way bugfixes (-current) and new features (-next) can
# have separate branches even when using pending-branch mode.
# 
#main-branches = ath-next ath-current

# (Optional) Log level to use with the .git/pwcli/log file.
#
# Valid options: info (default), debug
#
#log-level = debug

# (Optional) Maximum width of the terminal. If the terminal is very wide
# it reduce readibility of the list command output, this makes it
# possible to limit the width (columns size).
#
# Valid options: integer > 0
#
#max-terminal-width = 50

# (Optional) Download all active series information, cover letters and
# comments to both cover letters during startup. pwcli uses this data
# for example providing statistics (Acked-by, comments etc) in list
# command. If this is disabled pwcli acts as there are no cover
# letters nor any comments, ie. everything is just zero. This at least
# doubles pwcli startup time, with 300 patches it can take even over a
# minute to download all comments.
#
# Valid options: false (default), true
#
#download-series = false

# (Optional) Maximum number of parallel REST requests to the patchwork
# server. Increasing the thread pool will decrease the time to
# download comments. No effect if download-series is false.
#
# Valid options: integer > 0, default 8
#
#download-threads = 8
