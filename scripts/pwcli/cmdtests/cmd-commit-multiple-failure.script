#!/usr/bin/env python3
#
# Copyright (c) 2016, The Linux Foundation.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

import cmdtestlib

def test_commit(ctxt, pwcli):

   # first apply one commit to the repository as the baseline
   pwcli.expect_prompt()
   pwcli.sendline('list new')

   pwcli.expect_prompt()
   pwcli.sendline('commit 1')

   # all
   pwcli.expect(cmdtestlib.PROMPT_COMMIT_ALL)
   pwcli.sendline('a')

   # accept
   pwcli.expect(cmdtestlib.PROMPT_COMMIT_ACCEPT)
   pwcli.sendline('a')

   # now apply apply a bigger patch which fails in patch 5
   pwcli.expect_prompt()
   pwcli.sendline('list review')

   ctxt.git.set_commit_failure(5)

   pwcli.expect_prompt()
   pwcli.sendline('commit 1-7')

   # all
   pwcli.expect(cmdtestlib.PROMPT_COMMIT_ALL)
   pwcli.sendline('a')

   # changes requested
   pwcli.expect(cmdtestlib.PROMPT_COMMIT_ACCEPT)
   pwcli.sendline('c')

   # reason
   pwcli.expect(cmdtestlib.PROMPT_REVIEW_REASON)
   pwcli.sendline('Patch 5 failed to apply.')

   # send mail
   pwcli.expect(cmdtestlib.PROMPT_REPLY)
   pwcli.sendline('s')

   pwcli.expect_prompt()
   pwcli.sendline('quit')

   print(ctxt.smtpd.get_mails_as_string())

   # print the top commit
   print(ctxt.git.get_commits_oneline(1))

if __name__ == "__main__":
   cmdtestlib.StubContext.run_test(test_commit)

